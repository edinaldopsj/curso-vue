{"remainingRequest":"/home/edinaldopsj/Projects/curso-vue/vuex-exercicios/node_modules/babel-loader/lib/index.js!/home/edinaldopsj/Projects/curso-vue/vuex-exercicios/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/edinaldopsj/Projects/curso-vue/vuex-exercicios/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/edinaldopsj/Projects/curso-vue/vuex-exercicios/src/components/Loja.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/edinaldopsj/Projects/curso-vue/vuex-exercicios/src/components/Loja.vue","mtime":1565948652178},{"path":"/home/edinaldopsj/Projects/curso-vue/vuex-exercicios/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/edinaldopsj/Projects/curso-vue/vuex-exercicios/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/edinaldopsj/Projects/curso-vue/vuex-exercicios/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/edinaldopsj/Projects/curso-vue/vuex-exercicios/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/edinaldopsj/Projects/curso-vue/vuex-exercicios/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { mapMutations } from 'vuex'\nimport { mapActions } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      sequencia: 1\n    };\n  },\n  computed: {\n    quantidade: function quantidade() {\n      return this.$store.state.parametros.quantidade;\n    },\n    preco: function preco() {\n      return this.$store.state.parametros.preco;\n    }\n  },\n  methods: _objectSpread({}, mapActions(['adicionarProduto']), {\n    //usando o namespace, tem que avisar de onde vem a Action -> no caso de carrinho\n    adicionar: function adicionar() {\n      var produto = {\n        id: this.sequencia,\n        nome: \"Produto \".concat(this.sequencia),\n        quantidade: this.quantidade,\n        preco: this.preco\n      };\n      this.sequencia++; // this.$store.state.produtos.push(produto)\n      // this.$store.commit('adicionarProduto', produto)\n      // this.$store.dispatch('adicionarProduto', produto) //funciona como acima tb\n\n      this.adicionarProduto(produto);\n      console.log(this.$store.getters.getNome);\n      console.log(this.$store.getters.getNomeCompleto);\n    }\n  })\n};",{"version":3,"sources":["Loja.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,UAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,KAAA;AACA;AANA,GANA;AAcA,EAAA,OAAA,oBAMA,UAAA,CAAA,CAAA,kBAAA,CAAA,CANA;AAMA;AACA,IAAA,SAPA,uBAOA;AACA,UAAA,OAAA,GAAA;AACA,QAAA,EAAA,EAAA,KAAA,SADA;AAEA,QAAA,IAAA,oBAAA,KAAA,SAAA,CAFA;AAGA,QAAA,UAAA,EAAA,KAAA,UAHA;AAIA,QAAA,KAAA,EAAA,KAAA;AAJA,OAAA;AAOA,WAAA,SAAA,GARA,CAUA;AACA;AACA;;AACA,WAAA,gBAAA,CAAA,OAAA;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,eAAA;AACA;AAxBA;AAdA,CAAA","sourcesContent":["<template>\n    <Painel titulo=\"Loja Virtual\" verde>\n        <div class=\"loja\">\n            <span>Adicionar</span>\n            <input type=\"number\" v-model.number=\"quantidade\">\n            <span>itens de <strong>R$</strong></span>\n            <input type=\"number\" v-model.number=\"preco\">\n            <button @click=\"adicionar\">Agora!</button>\n        </div>\n    </Painel>\n</template>\n\n<script>\n// import { mapMutations } from 'vuex'\nimport { mapActions } from 'vuex'\n\nexport default {\n    data() {\n        return {\n            sequencia: 1\n        }\n\t},\n\tcomputed: {\n\t\tquantidade() {\n\t\t\treturn this.$store.state.parametros.quantidade\n\t\t},\n\t\tpreco() {\n\t\t\treturn this.$store.state.parametros.preco\n\t\t}\n\t},\n    methods: {\n\t\t//Os três acimas todos iguais, somente o mapActions que serve a um outro propósito\n\t\t// ...mapMutations(['adicionarProduto']),\n\t\t// adicionarProduto(produto) {\n\t\t// \tthis.$store.dispatch('adicionarProduto', produto)\n\t\t// },\n\t\t...mapActions(['adicionarProduto']), //usando o namespace, tem que avisar de onde vem a Action -> no caso de carrinho\n        adicionar() {\n            const produto = {\n                id: this.sequencia,\n                nome: `Produto ${this.sequencia}`,\n                quantidade: this.quantidade,\n                preco: this.preco\n\t\t\t}\n\t\t\t\n\t\t\tthis.sequencia++\n\t\t\t\n\t\t\t// this.$store.state.produtos.push(produto)\n\t\t\t// this.$store.commit('adicionarProduto', produto)\n\t\t\t// this.$store.dispatch('adicionarProduto', produto) //funciona como acima tb\n\t\t\tthis.adicionarProduto(produto)\n\n\t\t\tconsole.log(this.$store.getters.getNome);\n\t\t\tconsole.log(this.$store.getters.getNomeCompleto);\n        }\n    }\n}\n</script>\n\n<style>\n    .loja {\n        display: flex;\n        justify-content: center;\n    }\n\n    .loja > * {\n        margin: 0px 10px;\n    }\n\n    input {\n        font-size: 2rem;\n        width: 90px;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}