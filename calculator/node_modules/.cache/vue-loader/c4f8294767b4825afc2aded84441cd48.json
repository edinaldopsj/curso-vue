{"remainingRequest":"/home/edinaldopsj/Projects/curso-vue/calculator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/edinaldopsj/Projects/curso-vue/calculator/src/main/Calculator.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/edinaldopsj/Projects/curso-vue/calculator/src/main/Calculator.vue","mtime":1566518194953},{"path":"/home/edinaldopsj/Projects/curso-vue/calculator/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/edinaldopsj/Projects/curso-vue/calculator/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/edinaldopsj/Projects/curso-vue/calculator/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/edinaldopsj/Projects/curso-vue/calculator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/edinaldopsj/Projects/curso-vue/calculator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.calculator {\n\theight: 320px;\n\twidth: 235px;\n\tborder-radius: 5px;\n\toverflow: hidden;\n\n\tdisplay: grid;\n\tgrid-template-columns: repeat(4, 25%);\n\tgrid-template-rows: 1fr 48px 48px 48px 48px 48px;\n}\n",{"version":3,"sources":["Calculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Calculator.vue","sourceRoot":"src/main","sourcesContent":["<template>\n\t<div class=\"calculator\">\n\t\t<Display :value=\"displayValue\" />\n\t\t<Button label=\"AC\" triple @onClick=\"clearMemory\" />\n\t\t<Button label=\"/\" operation @onClick=\"setOperation\" />\n\t\t<Button label=\"7\" @onClick=\"addDigit\" />\n\t\t<Button label=\"8\" @onClick=\"addDigit\" />\n\t\t<Button label=\"9\" @onClick=\"addDigit\" />\n\t\t<Button label=\"*\" operation @onClick=\"setOperation\" />\n\t\t<Button label=\"4\" @onClick=\"addDigit\" />\n\t\t<Button label=\"5\" @onClick=\"addDigit\" />\n\t\t<Button label=\"6\" @onClick=\"addDigit\" />\n\t\t<Button label=\"-\" operation @onClick=\"setOperation\" />\n\t\t<Button label=\"1\" @onClick=\"addDigit\" />\n\t\t<Button label=\"2\" @onClick=\"addDigit\" />\n\t\t<Button label=\"3\" @onClick=\"addDigit\" />\n\t\t<Button label=\"+\" operation @onClick=\"setOperation\" />\n\t\t<Button label=\"0\" double @onClick=\"addDigit\" />\n\t\t<Button label=\".\" @onClick=\"addDigit\" />\n\t\t<Button label=\"=\" operation @onClick=\"setOperation\" />\n\t</div>\n</template>\n\n<script>\n\nimport Display from '../components/Display'\nimport Button from '../components/Button'\n\nexport default {\n\tcomponents: { Display, Button },\n\tdata() {\n\t\treturn {\n\t\t\tdisplayValue: \"0\",\n\t\t\tclearDisplay: false,\n\t\t\toperation: null,\n\t\t\tvalues: [0,0],\n\t\t\tcurrent: 0\n\t\t}\n\t},\n\tmethods: {\n\t\tclearMemory() {\n\t\t\tObject.assign(this.$data, this.$options.data())\n\t\t},\n\t\tsetOperation(operation) {\n\t\t\tif(this.current === 0) {\n\t\t\t\tthis.operation = operation\n\t\t\t\tthis.current = 1\n\t\t\t\tthis.clearDisplay = true\n\t\t\t} else {\n\t\t\t\tconst equals = operation === \"=\"\n\t\t\t\tconst currentOperation = this.operation\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.value[0] = eval(\n\t\t\t\t\t\t`${this.values[0]} ${currentOperation} ${this.values[1]}`\n\t\t\t\t\t)\n\t\t\t\t} catch(e) {\n\t\t\t\t\tthis.$emit('onError', e)\n\t\t\t\t}\n\n\t\t\t\tthis.values[1] = 0\n\n\t\t\t\tthis.displayValue = this.values[0]\n\t\t\t\tthis.operation = equals ? null : operation\n\t\t\t\tthis.current = equals ? 0 : 1\n\t\t\t\tthis.clearDisplay = !equals\n\t\t\t}\n\t\t},\n\t\taddDigit(n) {\n\t\t\tif(n === '.' && this.displayValue.includes('.')) {\n\t\t\t\treturn \n\t\t\t}\n\n\t\t\tconst clearDisplay = this.displayValue === \"0\" || this.clearDisplay\n\n\t\t\tconst currentValue = clearDisplay ? \"\" : this.displayValue\n\t\t\tconst displayValue = currentValue + n\n\n\t\t\tthis.displayValue = displayValue\n\t\t\tthis.clearDisplay = false\n\n\t\t\tif(n !== \".\") {\n\t\t\t\tconst i = this.current\n\t\t\t\tconst newValue = parseFloat(displayValue)\n\t\t\t\tthis.values[i] = newValue\n\t\t\t}\n\t\t}\n\t}\n}\n\n</script>\n\n<style>\n\t.calculator {\n\t\theight: 320px;\n\t\twidth: 235px;\n\t\tborder-radius: 5px;\n\t\toverflow: hidden;\n\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(4, 25%);\n\t\tgrid-template-rows: 1fr 48px 48px 48px 48px 48px;\n\t}\n</style>"]}]}